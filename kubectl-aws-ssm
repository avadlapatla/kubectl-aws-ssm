#!/bin/bash

# Check if aws cli version 2 is installed
aws_version=$(aws --version 2>&1 | cut -d'/' -f2 | cut -d'.' -f1)
if [ "$aws_version" != "2" ]; then
  echo "Error: aws cli version 2 is required."
  exit 1
fi

# Check if session-manager-plugin is installed
if ! command -v session-manager-plugin &> /dev/null; then
  echo "Error: session-manager-plugin is required."
  exit 1
fi

# Parse arguments
node_name=$1
selector=$2

# Find node IP and instance ID
if [ -n "$node_name" ]; then
  node_ip=$(kubectl get node $node_name -o jsonpath='{.status.addresses[?(@.type=="InternalIP")].address}')
  instance_id=$(kubectl get node $node_name -o jsonpath='{.spec.providerID}' | cut -d'/' -f5)
elif [ -n "$selector" ]; then
  node_ip=$(kubectl get nodes -l $selector -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
  instance_id=$(kubectl get nodes -l $selector -o jsonpath='{.items[0].spec.providerID}' | cut -d'/' -f5)
else
  echo "Usage: kubectl aws ssm [node-name] | [-l selector]"
  exit 1
fi

# Find cluster name and region
cluster_name=$(kubectl config current-context)
region=$(aws eks describe-cluster --name $cluster_name --query "cluster.resourcesVpcConfig.region" --output text)

# Start session manager session
aws ssm start-session --target $instance_id --region $region